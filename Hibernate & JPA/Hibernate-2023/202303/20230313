no-sql or semi-structured databases
In Relational Database Management Systems all the data is stored in structured format assuming each record has all the columns of data but in reality not every record has all the columns of data, the fields/columns of data being stored in each record will be different from record to record which is called "semi-structured data"
	
There are applications of different groups like Social Media, Scientific Research etc where the data that is produced by these applications are not structured, the attributes of data being generated by these applications will not have even relationship between the data, if such data has been stored in Relational database management system we endup storing NULL values for majority of columns in the records of the table and would waste huge amount of memory.
	
even though we can store this semi-structured data in RDBMS using columnar tables for eg.. we want to capture the lab test outcome in the database tables, for which the attributes of data being generated per each test would be different, so how can we capture such data in RDBMS

lab_test
lab_test_no  patient_nm  age  gender  mobile_nbr  test_type   test_conducted_date

lab_test_results
lab_test_no  parameter_nm  parameter_value  actual_range

if we see the above as the outcome of the tests like rbc_count, wbc_count, oxygen, blood_sugar etc will change from test to the test, rather than delcaring them as columns in lab_test table we are capturing outcomes as records in lab_test_results table which is an columnar database table

There are lot of problems in this approach of modelling and storing the data in RDBMS
1. complexity in designing the schema model is very high
2. programmers has to endup in writing complex logic in persisting the data into the relational tables
3. to fetch the lab_test report we need to endup in joining the tables based on relationshipcolumn where the relationship column doesnt makes any sense
4. The cost of processing the data is very high since the data is scattered across the tables and would endup in un-necessary joins being made to fetch the data
5. the queries are quite complex and query processing time in filtering data and fetching the data becomes very high

From the above we can understand, storing semi-structured data in relational database management systems are not suitable, so to overcome the above problems the no-sql or semistructured databases are introduced like
1. mongodb
2. cassendra
3. couchdb
4. oracle bigdata
5. neo4j
6. dynamodb
etc

all of these databases are built ontop of hadoop filesystem and are designed to be scaled and produces higher throughput
The way the no-sql databases stores the data differs from database to the database
For eg.. Mongodb stores the data in documents whereas dynamodb or cassendra stores in columnar fashion

Mongo
For each data we want to store we create an an Collection, in which the data is stored as documents for eg.. to store lab_test we can create a collection called "lab_tests"
	
lab_tests
{
	"labTestNo": 93894,
	"patientName": "Alex",
	"age": 39,
	"gender": "Male",
	"mobileNo": "38379494",
	"emailAddress": "alex@gmail.com",
	"rbcCount": 393,
	"wbcCount": 837,
	"platelets": 9383
},
{
	"labTestNo": 93895,
	"patientName": "Mathew",
	"age": 49,
	"gender": "Male",
	"mobileNo": "38379394",
	"emailAddress": "alex@gmail.com",
	"bloodSugar": 120,
	"himogloben": 383
}

6. Object storage database