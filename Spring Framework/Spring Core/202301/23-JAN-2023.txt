strategy design pattern
1. Favor composition over inheritance
2. Always design to interfaces, never design to concreate classes
3. Code should be open for extension and closed for modification

1. Favor composition over inheritance
To reuse the code of one class in another class, most of the time use Composition only dont use Inheritance, because if we use Inheritance we run into 4 problems/limitations
1.1 a class will not use all the functionalities of another class, amy of the times it want to use few of the functionalities, for which we need to use Composition only
1.2 multiple inheritance is not supported by most of the languages, so to reuse functionality from multiple classes we need to use Composition only
1.3 Inheritance makes the classes Fragile, whereas composition makes the classes less fragile
1.4 Inheritance doesnt support testability, composition supports testability of the components easily

2. Always design to interfaces, never design to concreate classes